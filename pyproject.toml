[project]
name = "viberdash"
version = "0.1.0"
description = "ðŸ¤–ðŸ“Š ViberDash - A terminal dashboard for Python code quality metrics"
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.12"
authors = [
    {name = "Johann Hartmann", email = "johannhartmann@users.noreply.github.com"}
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Quality Assurance",
]

dependencies = [
    "rich>=13.7.0",
    "click>=8.1.7",
    "tomli>=2.0.1",
    "radon>=6.0.1",
    "pylint>=3.0.0",
    "coverage>=7.3.0",
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "vulture>=2.7",
    "pathspec>=0.11.0",
]

[project.optional-dependencies]
dev = [
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.7.0",
    "ipython>=8.18.0",
    "pytest-watch>=4.2.0",
    "pre-commit>=3.5.0",
]

[project.scripts]
viberdash = "viberdash.vibescan:main"

[project.urls]
Homepage = "https://github.com/johannhartmann/viberdash"
Documentation = "https://github.com/johannhartmann/viberdash#readme"
Repository = "https://github.com/johannhartmann/viberdash"
Issues = "https://github.com/johannhartmann/viberdash/issues"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.uv]
dev-dependencies = [
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.7.0",
    "ipython>=8.18.0",
    "pytest-watch>=4.2.0",
    "pre-commit>=3.5.0",
]

[tool.hatch.build.targets.wheel]
packages = ["viberdash"]

[tool.black]
line-length = 88
target-version = ['py312']

[tool.ruff]
line-length = 88
target-version = "py312"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "N",  # pep8-naming
    "UP", # pyupgrade
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "SIM", # flake8-simplify
]
ignore = []

[tool.ruff.lint.isort]
known-first-party = ["viberdash"]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "-v --tb=short"

[tool.coverage.run]
source = ["viberdash"]
omit = ["*/tests/*", "*/__init__.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if __name__ == .__main__.:",
    "raise NotImplementedError",
]

# ViberDash-specific configuration
[tool.viberdash]
# The directory to analyze
source_dir = "viberdash/"

# File patterns to exclude from analysis (glob patterns)
# These patterns are relative to the source_dir
exclude_patterns = [
    # Python cache and compiled files
    "__pycache__",
    "*.pyc",
    "*.pyo",
    "*.pyd",

    # Virtual environments
    ".venv",
    "venv",
    "env",
    ".env",

    # Build and distribution
    "build",
    "dist",
    "*.egg-info",
    ".eggs",

    # Testing and coverage
    ".tox",
    ".nox",
    ".pytest_cache",
    ".coverage",
    "htmlcov",

    # Type checking and linting caches
    ".mypy_cache",
    ".ruff_cache",
    ".dmypy.json",
    "dmypy.json",

    # Version control
    ".git",
    ".hg",
    ".svn",

    # IDE and editor files
    ".idea",
    ".vscode",
    "*.swp",
    "*.swo",

    # OS files
    ".DS_Store",
    "Thumbs.db",

    # Node modules (for mixed projects)
    "node_modules",

    # Jupyter
    ".ipynb_checkpoints",

    # Temporary files
    "*.tmp",
    "*.temp",
    "*.bak",

    # Generated files
    "*.generated.py",
    "*_pb2.py",  # Protocol buffers
]

# Whether to respect .gitignore file (if it exists)
respect_gitignore = true

# Thresholds for metric visualization
[tool.viberdash.thresholds.cyclomatic_complexity]
good = 5.0
bad = 10.0

[tool.viberdash.thresholds.maintainability_index]
good = 85.0
bad = 65.0

[tool.viberdash.thresholds.maintainability_density]
good = 70.0
bad = 50.0

[tool.viberdash.thresholds.test_coverage]
good = 80.0
bad = 60.0

[tool.viberdash.thresholds.code_duplication]
good = 5.0
bad = 15.0

[tool.viberdash.thresholds.dead_code]
good = 5.0
bad = 15.0

[tool.viberdash.thresholds.style_violations]
good = 10.0
bad = 25.0

[tool.viberdash.thresholds.doc_coverage]
good = 80.0
bad = 60.0
